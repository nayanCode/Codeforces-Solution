
ll dfs(ll i,vector<vector<ll>>&g,vector<ll>&vis,vector<ll>&leafn){

vis[i]=1;
ll tot=0,cnt=0;
for(auto x:g[i]){
    if(!vis[x]){
       tot+=dfs(x,g,vis,leafn);
       cnt++;
    }
}
if(cnt==0)
return 1;

return leafn[i]=tot;
}


void solve()
{
 ll n,s=0,op=0;
 cin >> n;
vector<vector<ll>>g(n+1);
vector<ll>vis(n+1,0),leafn(n+1,0);
 for(int i=0;i<n-1;i++){
    ll u,v;
    cin>>u>>v;
    g[u].push_back(v);
    g[v].push_back(u);
 }
dfs(1,g,vis,leafn);

ll q;
cin>>q;

for(int i=0;i<q;i++){
    ll x,y;
    cin>>x>>y;
    ll xleaf=leafn[x],yleaf=leafn[y];

    if(xleaf==0 && yleaf==0){
        cout<<1;
    }
    else if(xleaf==0 || yleaf==0)
        cout<<max(xleaf,yleaf);
    else
        cout<<(xleaf*yleaf);
    if(i!=q-1)
    cout<<"\n";

}

}
