bool good(int x,vector<int>&asn,vector<vector<int>>&seg,int n){
    vector<int>v(n+1,0),pre(n+1,0);

    for(int i=0;i<x;i++){
        v[asn[i]]=1;
    }
    pre[0]=v[0];

     for(int i=1;i<n+1;i++){
        pre[i]=pre[i-1]+v[i];
    }

    for(auto p:seg){
        ll x=p[0],y=p[1],totones=pre[y]-pre[x-1];
        if(totones>(y-x-totones+1))
            return true;
    }
    return false;

}
void solve()
{
 ll n,m,l=0,r=0,res=-1;
 cin >> n>>m;
vector<vector<int>>seg;
 while(m--){
    int a,b;
    cin>>a>>b;
    seg.push_back({a,b});
 }


 ll q;
 cin>>q;
vector<int>asn(q,0);
r=q+1;
 for(int i=0;i<q;i++){
    cin>>asn[i];
 }

while(l<r){
ll mid=(l+r)/2;

if(good(mid,asn,seg,n)){
    r=mid;
    res=mid;
}
else{
    l=mid+1;
}

}
cout<<res;

}
